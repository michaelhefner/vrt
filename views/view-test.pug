extends layout

block content
    .input-container 
        h3 Search Tests 
        div(style='display: flex; flex-direction: column; margin: .25rem 2rem;')
            label(for='search') Search
            input#search(placeholder="www.example.com", style='max-width: 50%;')
    .input-container
        h3 Saved Tests
        .tests
            each link in links
                section.view-pg-link.flex
                    .title.flex-2
                        p= link.name
                    .last-updated.flex-1
                        small= 'Last Updated: ' 
                            p= link.test.last_updated
                    .action-items.flex-3
                        if link.testReady && link.referenceReady
                            a.grey-bg(href= link.href style='') View
                            a.grey-bg(href= link.allTests style='') Report History
                            a.blue-bg(href='/run-test/'+link.test.uuid style='') New Test
                        if !link.referenceReady
                            small(style='margin: auto; align-self: center; max-width: 200px; color: red;') A test may be running. Refresh page if you just ran a test.
                            a.purple-bg(href= '/run-test/' + link.test.uuid, style='') Run Reference
                        if !link.testReady 
                            a.blue-bg(href= '/run-test/' + link.test.uuid, style='') Run Test
                        a.red-bg(href='/delete/'+link.test.uuid style='') Delete
                    

    script. 
        const itemContainer = document.querySelector('.tests');
        const items = document.querySelectorAll('section.view-pg-link.flex');
        const searchString = document.querySelector('input#search');
        let results = [];
        searchString.addEventListener('keyup', (e)=>{
            results = [...items].filter(ea=> ea.children[0].innerText.indexOf(e.target.value) > -1);
            if (results.length > 0) {
                e.target.classList.add('valid');
                e.target.classList.remove('invalid');
            } else {
                e.target.classList.add('invalid');
                e.target.classList.remove('valid');
            }
            itemContainer.innerHTML = '';
            for (let res of results) {
                itemContainer.appendChild(res)
            }
        });
        const dateTime = document.querySelectorAll('small p');
        for (let dtDisplay of dateTime) {
            dtDisplay.innerText = (new Date(dtDisplay.innerText)).toLocaleString();
        }