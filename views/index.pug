extends layout

block content
    if user
        div(style="margin: 3rem auto; max-width: 70%")
            h2 Ready To Run a New Test?
            p.m-l-5 Click on 'Run Test' button in the main navigation.
            
        div(style="margin: 3rem auto; max-width: 70%")
            h2 Or Look at an Existing Test?
            p.m-l-5 Click on 'View Report Data' button in the main navigation.
        canvas#avg-mismatch(style="width:100%;max-width:700px; max-height: 300px")
    script. 
        
        const postData = async (url = '', data = {}) => {
            // Default options are marked with *
            const response = await fetch(url, {
                method: 'POST', // *GET, POST, PUT, DELETE, etc.
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                'Content-Type': 'application/json'
                // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                body: JSON.stringify(data) // body data type must match "Content-Type" header
            });
            return response.json(); // parses JSON response into native JavaScript objects
        }

        postData('/report/get-avg-mismatch')
        .then((data) => {
            const labels = data.map(d => `${d.viewport}`);
            const chartData = data.map(cd => cd.avg);
            const ctx = document.getElementById('avg-mismatch');
            const displayData = {
            labels: labels,
            datasets: [{
                axis: 'y',
                data: chartData,
                fill: false,
                backgroundColor: 
                'rgba(255, 99, 132, 0.2)'
                ,
                borderColor: 
                'rgb(255, 99, 132)'
                ,
                borderWidth: 1
            }]
            };
            new Chart(ctx, {
                type: 'bar',
                data: displayData,
                options: {
                    plugins: {
                        legend: {
                            display: false
                        },
                        title: {
                            display: true,
                            text: 'Top Failures',
                            padding: {
                                top: 10,
                                bottom: 30
                            }
                        }
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                fontSize: 24
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                fontSize: 24
                            }
                        }]
                    }
                }
            });
        });